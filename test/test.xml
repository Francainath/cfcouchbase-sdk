<?xml version="1.0"?>
<!--
This ANT build can be used to execute your tests with automation using our included runner.cfm.
You can executes directories, bundles and so much more.  It can also produce JUnit reports using the
ANT junitreport tag.  This is meant to be a template for you to spice up.

There are two targets you can use: run and run-junit

Execute the default 'run' target
ant -f test.xml
OR
ant -f test.xml run

Execute the 'run-junit' target
ant -f test.xml run-junit

PLEASE NOTE THAT YOU MUST ALTER THE RUNNER'S URL ACCORDING TO YOUR ENVIRONMENT.
-->
<project name="testbox-ant-runner" default="run" basedir=".">

  <target name="init" description="Init the tests">

        <!-- Default environment check, if not passed via -Denvironment -->
        <condition property="environment" value="local">
            <not><isset property="environment" /></not>
        </condition>
        <echo>Loading from environment: ${environment}</echo>
        <!-- Load env properties -->
        <loadproperties srcFile="test-${environment}.properties"/>

    <delete>
      <fileset dir="${report.dir}">
        <include name="TEST-*.xml"/>
        <include name="junitreport/*" />
      </fileset>
    </delete>
    <mkdir dir="${junitreport.dir}" />
    <chmod file="${junitreport.dir}/**" perm="g+wxrs" type="both" />
    <tstamp prefix="start">
      <format property="TODAY" pattern="MM-dd-YYYY hh:mm:ss aa"/>
    </tstamp>
    <concat destfile="${report.dir}/latestrun.log">Tests ran at ${start.TODAY}</concat>
  </target>

  <target name="run" depends="init" description="Run our tests and produce awesome results">

    <!-- Directory Runner
      Executes recursively all tests in the passed directory and stores the results in the
      'dest' param.  So if you want to rename the file, do so here.

       Available params for directory runner:
       - Reporter
       - Directory
       - Recurse
       - Labels
    -->
    <get dest="${report.dir}/results.html"
       src="${url.runner}&amp;directory=${test.directory}&amp;recurse=${test.recurse}&amp;reporter=${test.reporter}&amp;labels=${test.labels}&amp;propertiesSummary=true"
       verbose="true"/>

    <!-- Bundles Runner
      You can also run tests for specific bundles by using the runner with the bundles params

      Available params for runner:
       - Reporter
       - Bundles
       - Labels

    <get dest="${report.dir}/results.html"
       src="${url.runner}&amp;bundles=${test.bundles}&amp;reporter=${test.reporter}&amp;labels=${test.labels}&amp;propertiesSummary=true"
       verbose="true"/>
     -->

     <!-- Verify tests failed? -->
     <property file="${report.dir}/TEST.properties"/>
          <fail if="test.failed"/>

  </target>

  <target name="run-junit" depends="init" description="Run our tests and produce ANT JUnit reports">

    <!-- Directory Runner
      Executes recursively all tests in the passed directory and stores the results in the
      'dest' param.  So if you want to rename the file, do so here.

       Available params for directory runner:
       - Reporter = ANTJunit fixed
       - Directory
       - Recurse
       - Labels
       - ReportPath : The path where reports will be stored, by default it is the ${report.dir} directory.
    -->
    <get dest="${report.dir}/results.xml"
       src="${url.runner}&amp;directory=${test.directory}&amp;recurse=${test.recurse}&amp;reporter=ANTJunit&amp;labels=${test.labels}&amp;reportPath=${report.dir}&amp;propertiesSummary=true"
       verbose="true"/>

    <!-- Bundles Runner
      You can also run tests for specific bundles by using the runner with the bundles params

      Available params for runner:
       - Reporter
       - Bundles
       - Labels

    <get dest="${report.dir}/results.html"
       src="${url.runner}&amp;bundles=${test.bundles}&amp;reporter=${test.reporter}&amp;labels=${test.labels}&amp;propertiesSummary=true"
       verbose="true"/>
     -->

    <!-- Verify tests failed? -->
    <property file="${report.dir}/TEST.properties"/>

        <!-- Create fancy junit reports -->
    <junitreport todir="${junitreport.dir}">
      <fileset dir="${report.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${junitreport.dir}">
        <param name="TITLE" expression="My Awesome TestBox Results"/>
      </report>
    </junitreport>

    <fail if="test.failed"/>

  </target>

</project>